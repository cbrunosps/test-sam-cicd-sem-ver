#V1.0.0
name: main workflow
on:
  push:
    branches:
      - main
    paths:
      - '!**/.github/workflows/*.yml'  
      - '!**/.github/workflows/*.yaml' 
  workflow_dispatch:
  
jobs:
  ############ PUSH A RAMA MAIN ##############
  # Si se hace push a la rama main:
  DevDeploy:
    uses: test-org-123fdfsd/test-sam-cicd/.github/workflows/deploy-workflow.yml@main
    with:
      ambiente: "develop"
      ref: ${{ github.sha }}
    secrets:
      DEV_AWS_KEY_ID: ${{ secrets.VISOR_DEV_AWS_KEY_ID}}
      DEV_AWS_KEY_SECRET: ${{ secrets.VISOR_DEV_AWS_KEY_SECRET}}
      DEV_AWS_ACCOUNT_ID: ${{ secrets.VISOR_DEV_AWS_ACCOUNT_ID}}
      DEV_AWS_REGION: ${{ secrets.VISOR_DEV_AWS_REGION}}
      DEV_AWS_KMS: ${{ secrets.VISOR_DEV_AWS_KMS}}
  
  ValidacionDevelop:
    needs: DevDeploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: develop
    steps:
      # Validar drift
      - name: "Validar drift de stack de Cloudformation"
        run: |
          # Se ejecuta AWS para detectar la desviación/drift del stack. Este genera un ID.
          DRIFT=$(aws cloudformation detect-stack-drift --stack-name "${{needs.DevDeploy.outputs.project}}-${{needs.DevDeploy.outputs.stack}}-dev" | jq '.StackDriftDetectionId')
          
          # Se le quitan las comillas dobles a la variable de ambiente.
          DRIFT=$(echo "${DRIFT//'"'}")

          echo "El id de la deteccion del drift es:" $DRIFT
          
          # A veces la detección del drift es larga, por lo cual podemos verificar 
          # el estatus basado en su ID con el comando siguiente:

          DETECTIONSTATUS=$(aws cloudformation describe-stack-drift-detection-status --stack-drift-detection-id ${DRIFT} | jq '.DetectionStatus')
          
          # Se le quitan las comillas dobles a la variable de ambiente DETECTIONSTATUS
          DETECTIONSTATUS=$(echo "${DETECTIONSTATUS//'"'}")
        
          # El siguiente bucle verifica cada 2 segundos el estatus de la detección e imprime el estado actual. 
          # Y no brinca al siguiente paso hasta que tenga un estado de: detección completada.
          while [[ $DETECTIONSTATUS != "DETECTION_COMPLETE" ]]; do sleep 2; echo $DETECTIONSTATUS; \
          DETECTIONSTATUS=$(aws cloudformation describe-stack-drift-detection-status --stack-drift-detection-id ${DRIFT} | jq '.DetectionStatus'); \
          DETECTIONSTATUS=$(echo "${DETECTIONSTATUS//'"'}"); done
          echo $DETECTIONSTATUS
          
          # Se muestra el estado actual del drift del stack 
          DRIFTSTATUS=$(aws cloudformation describe-stack-drift-detection-status --stack-drift-detection-id $DRIFT | jq '.StackDriftStatus')
          DRIFTSTATUS=$(echo "${DRIFTSTATUS//'"'}")
          echo $DRIFTSTATUS

          #Hacemos ejecutable el script de notificacion de la deteccion de desviacion.
          chmod u+x ./notificacion_drift.sh

          #Ejecutamos el script para notificar.
          . ./notificacion_drift.sh
      - name: "Notificación de error"
        if: ${{ failure() }}
        run: |
          curl -H 'Content-Type: application/json' \
          --retry 4 \
          --retry-delay 1 \
          -d '{"text": "'"$PWD"' - '"$GITHUB_EVENT_NAME"' - ${{job.status}} - '"$GITHUB_REF"' - '"$GITHUB_BASE_REF"' "}' \
          https://mxspsolutions.webhook.office.com/webhookb2/a84b113f-9d27-4138-84ae-e3e4ab4830f2@ac5349df-152e-486f-9b39-fe3c4a25efe0/IncomingWebhook/e2f3db57ac59459a938f44c822548b89/10ed5eda-9b70-4598-858a-e5ae6599fa66