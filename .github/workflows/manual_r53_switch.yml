#V1.0.0
name: manual_switch_r53

env:
  primary_domain: ${{ secrets.ROUTE53_PRIMARY_DOMAIN }}
  failover_domain: ${{ secrets.ROUTE53_FAILOVER_DOMAIN }}
  hosted_zone_id: ${{ secrets.ROUTE53_HOSTEDZONEID }}
  production_domain: ${{ secrets.ROUTE53_PRODUCTION_DOMAIN }}
on:

  workflow_dispatch:

jobs:
  SwitchRoute53:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0    
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ROUTE53_AWS_KEY }}
          aws-secret-access-key: ${{ secrets.ROUTE53_AWS_SECRET }}
          aws-region: us-east-1
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: "Haciendo Switch de dominios."
        run: |

          # Instalacion de boto3
          pip install boto3

          # Hacemos ejecutable.
          chmod u+x getroute.sh

          # Se ejecuta script en la misma terminal del contenedor del workflow.
          . getroute.sh -hz "${{env.hosted_zone_id}}" -pd "${{env.primary_domain}}" -fd "${{env.failover_domain}}"

          
          # Se ejecuta script para hacer el switch de dominios.
          python3 switch.py -pd $PRIMARY_DOMAIN -pt $PRIMARY_TARGET -sd $FAILOVER_DOMAIN -st $FAILOVER_TARGET -hz "${{env.hosted_zone_id}}" -prd "${{env.production_domain}}" 